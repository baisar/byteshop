<?php

namespace DoctrineORMModule\Proxy\__CG__\Application\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class User extends \Application\Entity\User implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Application\\Entity\\User' . "\0" . 'id', '' . "\0" . 'Application\\Entity\\User' . "\0" . 'nick', '' . "\0" . 'Application\\Entity\\User' . "\0" . 'email', '' . "\0" . 'Application\\Entity\\User' . "\0" . 'pass', '' . "\0" . 'Application\\Entity\\User' . "\0" . 'token', '' . "\0" . 'Application\\Entity\\User' . "\0" . 'lastVisit', '' . "\0" . 'Application\\Entity\\User' . "\0" . 'registeredFromIp', '' . "\0" . 'Application\\Entity\\User' . "\0" . 'avatar', '' . "\0" . 'Application\\Entity\\User' . "\0" . 'cell', '' . "\0" . 'Application\\Entity\\User' . "\0" . 'regDate', '' . "\0" . 'Application\\Entity\\User' . "\0" . 'thumbnail', '' . "\0" . 'Application\\Entity\\User' . "\0" . 'emailConfirmed', '' . "\0" . 'Application\\Entity\\User' . "\0" . 'role'];
        }

        return ['__isInitialized__', '' . "\0" . 'Application\\Entity\\User' . "\0" . 'id', '' . "\0" . 'Application\\Entity\\User' . "\0" . 'nick', '' . "\0" . 'Application\\Entity\\User' . "\0" . 'email', '' . "\0" . 'Application\\Entity\\User' . "\0" . 'pass', '' . "\0" . 'Application\\Entity\\User' . "\0" . 'token', '' . "\0" . 'Application\\Entity\\User' . "\0" . 'lastVisit', '' . "\0" . 'Application\\Entity\\User' . "\0" . 'registeredFromIp', '' . "\0" . 'Application\\Entity\\User' . "\0" . 'avatar', '' . "\0" . 'Application\\Entity\\User' . "\0" . 'cell', '' . "\0" . 'Application\\Entity\\User' . "\0" . 'regDate', '' . "\0" . 'Application\\Entity\\User' . "\0" . 'thumbnail', '' . "\0" . 'Application\\Entity\\User' . "\0" . 'emailConfirmed', '' . "\0" . 'Application\\Entity\\User' . "\0" . 'role'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (User $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setNick($nick)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNick', [$nick]);

        return parent::setNick($nick);
    }

    /**
     * {@inheritDoc}
     */
    public function getNick()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNick', []);

        return parent::getNick();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', [$email]);

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setPass($pass)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPass', [$pass]);

        return parent::setPass($pass);
    }

    /**
     * {@inheritDoc}
     */
    public function getPass()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPass', []);

        return parent::getPass();
    }

    /**
     * {@inheritDoc}
     */
    public function setToken($token)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setToken', [$token]);

        return parent::setToken($token);
    }

    /**
     * {@inheritDoc}
     */
    public function getToken()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getToken', []);

        return parent::getToken();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastVisit($lastVisit)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastVisit', [$lastVisit]);

        return parent::setLastVisit($lastVisit);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastVisit()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastVisit', []);

        return parent::getLastVisit();
    }

    /**
     * {@inheritDoc}
     */
    public function setRegisteredFromIp($registeredFromIp)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegisteredFromIp', [$registeredFromIp]);

        return parent::setRegisteredFromIp($registeredFromIp);
    }

    /**
     * {@inheritDoc}
     */
    public function getRegisteredFromIp()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegisteredFromIp', []);

        return parent::getRegisteredFromIp();
    }

    /**
     * {@inheritDoc}
     */
    public function setAvatar($avatar)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAvatar', [$avatar]);

        return parent::setAvatar($avatar);
    }

    /**
     * {@inheritDoc}
     */
    public function getAvatar()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAvatar', []);

        return parent::getAvatar();
    }

    /**
     * {@inheritDoc}
     */
    public function setCell($cell)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCell', [$cell]);

        return parent::setCell($cell);
    }

    /**
     * {@inheritDoc}
     */
    public function getCell()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCell', []);

        return parent::getCell();
    }

    /**
     * {@inheritDoc}
     */
    public function setRegDate($regDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegDate', [$regDate]);

        return parent::setRegDate($regDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getRegDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegDate', []);

        return parent::getRegDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setThumbnail($thumbnail)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setThumbnail', [$thumbnail]);

        return parent::setThumbnail($thumbnail);
    }

    /**
     * {@inheritDoc}
     */
    public function getThumbnail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getThumbnail', []);

        return parent::getThumbnail();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmailConfirmed($emailConfirmed)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmailConfirmed', [$emailConfirmed]);

        return parent::setEmailConfirmed($emailConfirmed);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmailConfirmed()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmailConfirmed', []);

        return parent::getEmailConfirmed();
    }

    /**
     * {@inheritDoc}
     */
    public function setRole($role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRole', [$role]);

        return parent::setRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function getRole()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRole', []);

        return parent::getRole();
    }

}
